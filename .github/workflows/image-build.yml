name: Build, Push & Manifest Multi‑Arch Image

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/image‑build.yml'
      - 'Dockerfile'
      - 'scripts/start.sh'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/image‑build.yml'
      - 'Dockerfile'
      - 'scripts/start.sh'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]

    outputs:
      image_name: ${{ steps.lowercase.outputs.image_name }}
      tag: ${{ env.TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU for cross‑builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine release tag (support tag or latest)
        id: tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          else
            TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
            echo "TAG=$TAG" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute lowercase image name
        id: lowercase
        run: |
          echo "image_name=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build & push ${{ matrix.arch }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:latest-${{ matrix.arch }}
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:${{ env.TAG }}-${{ matrix.arch }}
          build-args: |
            TAG=${{ env.TAG }}
            ARCH=linux-${{ matrix.arch }}

  manifest:
    needs: build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build.outputs.tag }}

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi‑arch manifest
        run: |
          IMAGE=${{ needs.build.outputs.image_name }}
          docker buildx imagetools create \
            --tag ghcr.io/$IMAGE:latest \
            ghcr.io/$IMAGE:latest-amd64 \
            ghcr.io/$IMAGE:latest-arm64

          docker buildx imagetools create \
            --tag ghcr.io/$IMAGE:$TAG \
            ghcr.io/$IMAGE:$TAG-amd64 \
            ghcr.io/$IMAGE:$TAG-arm64
