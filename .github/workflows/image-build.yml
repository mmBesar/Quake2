name: Build, Push & Manifest Multi‑Arch Image

on:
  push:
    branches: [upstream, main]
  pull_request:
    branches: [upstream, main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]
    outputs:
      image_name: ${{ steps.lowercase.outputs.image_name }}
      tag: ${{ env.TAG }}

    steps:
      # 1) Checkout the pure upstream Quake2 source
      - name: Checkout upstream source
        uses: actions/checkout@v4
        with:
          # public repo: yquake2/yquake2 at master
          repository: yquake2/yquake2
          ref: master
          path: source

      # 2) Checkout your packaging files
      - name: Checkout packaging
        uses: actions/checkout@v4
        with:
          # your own repo
          ref: main
          path: packaging

      # 3) Overlay Dockerfile + start.sh into the source tree
      - name: Merge packaging into source
        run: |
          cp packaging/Dockerfile source/Dockerfile
          mkdir -p source/scripts
          cp packaging/scripts/start.sh source/scripts/start.sh

      - name: Install tooling
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up QEMU for cross‑builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine release tag (tag or latest)
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          else
            TAG=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              https://api.github.com/repos/yquake2/yquake2/releases/latest \
              | jq -r .tag_name)
            echo "TAG=$TAG" >> $GITHUB_ENV
          fi

      - name: Compute lowercase image name
        id: lowercase
        run: |
          IMAGE=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "image_name=$IMAGE" >> $GITHUB_OUTPUT

      - name: Build & push ${{ matrix.arch }}
        uses: docker/build-push-action@v3
        with:
          context: source
          file: source/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:latest-${{ matrix.arch }}
            ghcr.io/${{ steps.lowercase.outputs.image_name }}:${{ env.TAG }}-${{ matrix.arch }}
          build-args: |
            TAG=${{ env.TAG }}
            ARCH=linux-${{ matrix.arch }}

  # You can drop a separate manifest job if using build-push-action@v3+,
  # since it will automatically publish a multi-arch manifest under each tag.
  # If you prefer explicit manifest creation, you can add it back here.
