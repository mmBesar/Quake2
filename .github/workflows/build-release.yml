name: Build & Publish Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - upstream

permissions:
  contents: write

jobs:
  prepare:
    name: Prepare & Get Tag
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.get_tag.outputs.latest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch --tags --force

      - id: get_tag
        run: |
          latest=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "latest=$latest" >> $GITHUB_OUTPUT

  build:
    name: Containerized Crossâ€‘compile & ZIP
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - arch: amd64
            make_arch: linux-x86_64
          - arch: arm64
            make_arch: linux-aarch64

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - name: Build RELEASE & ZIP in container
        run: |
          mkdir -p out
          docker run --rm \
            --platform linux/${{ matrix.arch }} \
            -v ${{ github.workspace }}:/src \
            -w /src \
            ubuntu:22.04 \
            bash -euxc "
              apt-get update
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
                git build-essential pkg-config libsdl2-dev zlib1g-dev zip
              git config --global --add safe.directory /src
              git clean -fdx
              make BUILD=release ARCH=${{ matrix.make_arch }}
              zip -j out/quake2-linux-${{ matrix.arch }}-${{ needs.prepare.outputs.tag }}.zip \
                quake2 q2ded ref_*.so baseq2/game.so
            "

      - name: Build DEBUG & ZIP in container
        run: |
          docker run --rm \
            --platform linux/${{ matrix.arch }} \
            -v ${{ github.workspace }}:/src \
            -w /src \
            ubuntu:22.04 \
            bash -euxc "
              apt-get update
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
                git build-essential pkg-config libsdl2-dev zlib1g-dev zip
              git config --global --add safe.directory /src
              git clean -fdx
              make BUILD=debug ARCH=${{ matrix.make_arch }}
              zip -j out/quake2-linux-${{ matrix.arch }}-${{ needs.prepare.outputs.tag }}-debug.zip \
                quake2 q2ded ref_*.so baseq2/game.so
            "

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.arch }}
          path: out/*.zip

  release:
    name: Create or Update GitHub Release
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries-amd64
          path: artifacts/amd64

      - uses: actions/download-artifact@v4
        with:
          name: binaries-arm64
          path: artifacts/arm64

      - id: create_release
        uses: peter-evans/create-or-update-release@v4
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          release_name: ${{ needs.prepare.outputs.tag }}
          draft: false
          prerelease: false

      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            artifacts/amd64/*.zip
            artifacts/arm64/*.zip
          asset_name: ''
          asset_content_type: application/zip
