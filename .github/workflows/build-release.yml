name: Build and Release Binaries

on:
  push:
    branches: [ upstream ]
    tags: [ 'QUAKE2_*' ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        - arch: amd64
          suffix: linux-amd64
          platform: linux/amd64
        - arch: arm64
          suffix: linux-arm64
          platform: linux/arm64

    outputs:
      tag: ${{ steps.tag.outputs.TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: upstream
          fetch-depth: 0

      - name: Get TAG
        id: tag
        run: |
          TAG=$(git tag --sort=-creatordate | grep QUAKE2_ | head -1)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Install native dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential libsdl2-dev libopenal-dev libcurl4-openssl-dev \
            libgl1-mesa-dev zlib1g-dev

      - name: Build for ${{ matrix.arch }}
        run: |
          mkdir build-${{ matrix.arch }}
          cd build-${{ matrix.arch }}
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            cmake .. -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_SYSTEM_PROCESSOR=aarch64
          else
            cmake .. -DCMAKE_BUILD_TYPE=Release
          fi
          make -j$(nproc)
          mkdir output-${{ matrix.arch }}
          cp quake2 q2ded baseq2/game.so ref_*.so output-${{ matrix.arch }}/ || true

      - name: Zip amd64 and arm64 (non-debug)
        run: |
          OUT=Quake2-${{ matrix.suffix }}
          mkdir -p $OUT/baseq2
          cp output-${{ matrix.arch }}/quake2 $OUT/
          cp output-${{ matrix.arch }}/q2ded $OUT/
          cp output-${{ matrix.arch }}/baseq2/game.so $OUT/baseq2/ || true
          cp output-${{ matrix.arch }}/ref_*.so $OUT/ || true
          zip -r quake2-${{ matrix.suffix }}-${{ env.TAG }}.zip $OUT

      - name: Build debug variant
        run: |
          mkdir build-${{ matrix.arch }}-debug
          cd build-${{ matrix.arch }}-debug
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo \
              -DCMAKE_SYSTEM_PROCESSOR=aarch64
          else
            cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo
          fi
          make -j$(nproc)
          mkdir output-${{ matrix.arch }}-debug
          cp quake2 q2ded baseq2/game.so ref_*.so output-${{ matrix.arch }}-debug/ || true

      - name: Zip debug
        run: |
          OUT=Quake2-${{ matrix.suffix }}-debug
          mkdir -p $OUT/baseq2
          cp output-${{ matrix.arch }}-debug/quake2 $OUT/
          cp output-${{ matrix.arch }}-debug/q2ded $OUT/
          cp output-${{ matrix.arch }}-debug/baseq2/game.so $OUT/baseq2/ || true
          cp output-${{ matrix.arch }}-debug/ref_*.so $OUT/ || true
          zip -r quake2-${{ matrix.suffix }}-${{ env.TAG }}-debug.zip $OUT

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          files: |
            quake2-${{ matrix.suffix }}-${{ env.TAG }}.zip
            quake2-${{ matrix.suffix }}-${{ env.TAG }}-debug.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
