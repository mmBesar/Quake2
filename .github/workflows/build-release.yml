name: Build & Publish Binaries

on:
  workflow_dispatch:
  push:
    branches: [ upstream ]

permissions:
  contents: write

jobs:
  prepare:
    name: Prepare & Get Tag
    runs-on: ubuntu-22.04
    outputs:
      tag: ${{ steps.get_tag.outputs.latest }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch --tags --force

      - id: get_tag
        run: |
          latest=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "latest=$latest" >> $GITHUB_OUTPUT

  build:
    name: Build ${{ matrix.arch }}
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - arch: amd64
            triple: x86_64-linux-gnu
            make_arch: linux-x86_64
          - arch: arm64
            triple: aarch64-linux-gnu
            make_arch: linux-aarch64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install native build deps (amd64)
        if: ${{ matrix.arch == 'amd64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config libsdl2-dev zlib1g-dev \
            zip

      - name: Enable arm64 multiâ€‘arch & install cross-deps
        if: ${{ matrix.arch == 'arm64' }}
        run: |
          sudo dpkg --add-architecture arm64

          # Remove invalid arm64 sources to prevent 404s
          sudo sed -i '/^deb .*security\.ubuntu\.com.*arm64/d' /etc/apt/sources.list
          sudo sed -i '/^deb .*archive\.ubuntu\.com.*arm64/d' /etc/apt/sources.list

          # Add correct arm64 sources
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/arm64-ports.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64-ports.list
          echo "deb [arch=arm64] http://ports.ubuntu.com/ jammy-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64-ports.list

          sudo apt-get update
          sudo apt-get install -y \
            gcc-${{ matrix.triple }} \
            g++-${{ matrix.triple }} \
            binutils-${{ matrix.triple }} \
            libsdl2-dev:arm64 \
            zlib1g-dev:arm64 \
            zip pkg-config

      - name: Build RELEASE & zip
        run: |
          git clean -fdx
          make BUILD=release \
               ARCH=${{ matrix.make_arch }} \
               CC=${{ matrix.triple }}-gcc \
               CXX=${{ matrix.triple }}-g++
          mkdir -p out
          zip -j out/quake2-linux-${{ matrix.arch }}-${{ needs.prepare.outputs.tag }}.zip \
            quake2 q2ded ref_*.so baseq2/game.so

      - name: Build DEBUG & zip
        run: |
          git clean -fdx
          make BUILD=debug \
               ARCH=${{ matrix.make_arch }} \
               CC=${{ matrix.triple }}-gcc \
               CXX=${{ matrix.triple }}-g++
          zip -j out/quake2-linux-${{ matrix.arch }}-${{ needs.prepare.outputs.tag }}-debug.zip \
            quake2 q2ded ref_*.so baseq2/game.so

      - name: Upload ZIPs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.arch }}
          path: out/*.zip

  release:
    name: Publish Release
    needs: [prepare, build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries-amd64
          path: artifacts/amd64

      - uses: actions/download-artifact@v4
        with:
          name: binaries-arm64
          path: artifacts/arm64

      - name: Create or Update GitHub Release
        uses: peter-evans/create-or-update-release@v4
        id: create_release
        with:
          tag_name: ${{ needs.prepare.outputs.tag }}
          release_name: ${{ needs.prepare.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload ZIPs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/amd64/*.zip
            artifacts/arm64/*.zip
