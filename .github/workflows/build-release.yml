name: Build Multi-Arch Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-multiarch:
    runs-on: ubuntu-latest
    name: Build for amd64 + arm64
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: version
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build release artifacts
        run: |
          mkdir -p out
          for ARCH in amd64 arm64; do
            echo "==> Building for $ARCH"

            BUILD_DIR=build-$ARCH
            INSTALL_DIR=Quake2-linux-$ARCH
            DEBUG_SUFFIX=""

            if [[ "$ARCH" == "amd64" ]]; then
              CMAKE_ARCH_OPTS=""
              COMPILER_OPTS=""
            else
              CMAKE_ARCH_OPTS="-DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=arm64"
              COMPILER_OPTS="-DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc"
            fi

            for MODE in Release RelWithDebInfo; do
              [[ "$MODE" == "RelWithDebInfo" ]] && DEBUG_SUFFIX="-debug"

              rm -rf $BUILD_DIR && mkdir $BUILD_DIR
              cmake -S . -B $BUILD_DIR \
                -DCMAKE_BUILD_TYPE=$MODE \
                $CMAKE_ARCH_OPTS \
                $COMPILER_OPTS \
                -DRUNTIME_OUTPUT_DIRECTORY=$BUILD_DIR/release

              cmake --build $BUILD_DIR --parallel

              cp -r $BUILD_DIR/release $INSTALL_DIR$DEBUG_SUFFIX
              zip -r out/quake2-linux-$ARCH-${TAG}${DEBUG_SUFFIX}.zip $INSTALL_DIR$DEBUG_SUFFIX
              rm -rf $INSTALL_DIR$DEBUG_SUFFIX
            done
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quake2-multiarch-${{ env.TAG }}
          path: out/*.zip
