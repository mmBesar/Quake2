name: Build and Release Binaries

on:
  push:
    branches:
      - upstream
    tags:
      - 'QUAKE2_*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            container_platform: linux/amd64
            suffix: amd64
            cmake_flags: "-DCMAKE_BUILD_TYPE=Release"
            zip_suffix: "" 
          - arch: arm64
            container_platform: linux/arm64
            suffix: arm64
            cmake_flags: "-DCMAKE_BUILD_TYPE=Release"
            zip_suffix: ""
          - arch: amd64
            container_platform: linux/amd64
            suffix: amd64
            cmake_flags: "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
            zip_suffix: "-debug"
          - arch: arm64
            container_platform: linux/arm64
            suffix: arm64
            cmake_flags: "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
            zip_suffix: "-debug"

    # each step runs inside a container emulating the target platform
    container:
      image: ubuntu:22.04
      platform: ${{ matrix.container_platform }}

    steps:
      - name: Checkout upstream branch
        uses: actions/checkout@v4
        with:
          ref: upstream
          fetch-depth: 0

      - name: Set tag
        id: get_tag
        run: |
          TAG=$(git tag --sort=-creatordate | grep QUAKE2_ | head -n1)
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            build-essential cmake pkg-config libsdl2-dev \
            libsdl2-image-dev libopenal-dev libcurl4-openssl-dev \
            libx11-dev libxi-dev libgl1-mesa-dev zlib1g-dev zip

      - name: Build yquake2
        run: |
          mkdir build && cd build
          cmake .. ${{ matrix.cmake_flags }} -DRUNTIME_OUTPUT_DIRECTORY=release
          make -j$(nproc)

      - name: Prepare Quake2 directory
        run: |
          # flatten into a single directory and rename for arch+mode
          DIR=Quake2-${{ matrix.suffix }}${{ matrix.zip_suffix }}
          mkdir -p $DIR/baseq2
          cp build/release/quake2        $DIR/
          cp build/release/q2ded         $DIR/
          cp build/release/baseq2/game.so $DIR/baseq2/ || true
          cp build/release/ref_*.so      $DIR/ || true

      - name: Zip release
        run: |
          zip -r quake2-linux-${{ matrix.suffix }}-${{ env.TAG }}${{ matrix.zip_suffix }}.zip \
              Quake2-${{ matrix.suffix }}${{ matrix.zip_suffix }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          files: >
            quake2-linux-${{ matrix.suffix }}-${{ env.TAG }}${{ matrix.zip_suffix }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
