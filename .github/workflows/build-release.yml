name: Build Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build-release:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
            cc: gcc
            cxx: g++
            cmake_arch: ""
            compiler_flags: ""
          - arch: arm64
            runner: ubuntu-22.04-arm64
            cc: gcc
            cxx: g++
            cmake_arch: "-DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=arm64"
            compiler_flags: "-DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc"

    env:
      TAG: ${{ github.ref_name }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake pkg-config zip \
            libsdl2-dev libsdl2-image-dev \
            libopenal-dev libcurl4-openssl-dev \
            libx11-dev libxi-dev libgl1-mesa-dev zlib1g-dev

          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          fi

      - name: Build and zip binaries (Release + Debug)
        run: |
          set -e
          mkdir -p out

          for MODE in Release RelWithDebInfo; do
            DEBUG_SUFFIX=""
            [[ "$MODE" == "RelWithDebInfo" ]] && DEBUG_SUFFIX="-debug"

            BUILD_DIR=build-${{ matrix.arch }}$DEBUG_SUFFIX
            INSTALL_DIR=Quake2-linux-${{ matrix.arch }}$DEBUG_SUFFIX

            cmake -S . -B $BUILD_DIR \
              -DCMAKE_BUILD_TYPE=$MODE \
              ${{ matrix.cmake_arch }} \
              ${{ matrix.compiler_flags }} \
              -DRUNTIME_OUTPUT_DIRECTORY=$BUILD_DIR/release

            cmake --build $BUILD_DIR --parallel

            cp -r $BUILD_DIR/release $INSTALL_DIR
            zip -r out/quake2-linux-${{ matrix.arch }}-${TAG}${DEBUG_SUFFIX}.zip $INSTALL_DIR
          done

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quake2-linux-${{ matrix.arch }}-${{ env.TAG }}
          path: out/*.zip
