name: Build and Release Quake2

on:
  push:
    tags: ['QUAKE2_*']
    branches: [upstream]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
            output: output-amd64
          - arch: arm64
            platform: linux/arm64/v8
            output: output-arm64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: upstream
          fetch-depth: 0

      - name: Determine tag
        id: tag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "Using tag: $TAG"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binaries
        run: |
          mkdir -p ${{ matrix.output }}

          cat > Dockerfile.build << 'EOF'
          FROM ubuntu:22.04
          RUN apt-get update && \
              DEBIAN_FRONTEND=noninteractive apt-get install -y \
              build-essential cmake pkg-config zip \
              libsdl2-dev libsdl2-image-dev \
              libopenal-dev libcurl4-openssl-dev \
              libx11-dev libxi-dev libgl1-mesa-dev zlib1g-dev && \
              rm -rf /var/lib/apt/lists/*
          WORKDIR /src
          COPY . .
          RUN test -f CMakeLists.txt || (echo "Missing CMakeLists.txt!" && false)
          RUN mkdir build && cd build && \
              cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DRUNTIME_OUTPUT_DIRECTORY=release && \
              make -j$(nproc)
          RUN mkdir -p /out && \
              cp build/release/quake2 build/release/q2ded /out/ && \
              cp build/release/ref_*.so /out/ || true && \
              mkdir -p /out/baseq2 && \
              cp build/release/baseq2/game.so /out/baseq2/ || true
          EOF

          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file Dockerfile.build \
            --output type=local,dest=${{ matrix.output }} \
            --build-context .=$(pwd) \
            .

      - name: Show output contents
        run: |
          echo "==> Output files for ${{ matrix.arch }}"
          find ${{ matrix.output }}

      - name: Create debug ZIP
        run: |
          OUTDIR=Quake2-linux-${{ matrix.arch }}-debug
          mkdir -p $OUTDIR/baseq2
          cp ${{ matrix.output }}/quake2 $OUTDIR/ || true
          cp ${{ matrix.output }}/q2ded $OUTDIR/ || true
          cp ${{ matrix.output }}/ref_*.so $OUTDIR/ || true
          cp ${{ matrix.output }}/baseq2/game.so $OUTDIR/baseq2/ || true
          zip -r quake2-linux-${{ matrix.arch }}-${{ env.TAG }}-debug.zip $OUTDIR

      - name: Create stripped release ZIP
        run: |
          OUTDIR=Quake2-linux-${{ matrix.arch }}
          mkdir -p $OUTDIR/baseq2
          cp ${{ matrix.output }}/quake2 $OUTDIR/ || true
          cp ${{ matrix.output }}/q2ded $OUTDIR/ || true
          cp ${{ matrix.output }}/ref_*.so $OUTDIR/ || true
          cp ${{ matrix.output }}/baseq2/game.so $OUTDIR/baseq2/ || true

          docker run --rm --platform ${{ matrix.platform }} \
            -v $(pwd)/$OUTDIR:/workspace ubuntu:22.04 \
            bash -c "apt-get update && apt-get install -y binutils && \
                     strip /workspace/quake2 /workspace/q2ded /workspace/*.so 2>/dev/null || true"

          zip -r quake2-linux-${{ matrix.arch }}-${{ env.TAG }}.zip $OUTDIR

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          files: |
            quake2-linux-${{ matrix.arch }}-${{ env.TAG }}.zip
            quake2-linux-${{ matrix.arch }}-${{ env.TAG }}-debug.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
